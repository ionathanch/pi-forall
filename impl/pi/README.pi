module README where

-- Conjuction, disjuction, negation
import Logic

-- Properties of _=_ (builtin equality type)
import Equality

-- Propositional equality as a datatype
import Equal

-- Propositional equality as Leibniz equality
import Leibniz

-- Strong (Sigma A B) and weak ({x : A | B}) pairs
import Product

-- Mere propositions and h-sets
import PropSet

-- Answer-polymorphic CPS translation as a monad
import CPS

-- Booleans, decidable types, optionals, naturals, finite sets, ordinals, lists, vectors
import BoolLib
import Dec
import Option
import Nat
import Fin
import Ord
import List
import Vec

-- Portion of Burali-Forti's paradox that checks,
-- with unannotated and annotated levels
import WFU
import WFUAnnot

-- Portion of Russell's paradox that checks
import Russell

-- Portion of Hurken's paradox that checks,
-- with unannotated and annotated levels
import Hurkens
import HurkensAnnot

-- Portion of Reynolds' paradox that checks
import Reynolds

-- Other miscellaneous files
import Blowup
import Case
import Fix
